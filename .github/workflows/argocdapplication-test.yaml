name: Deploy to ArgoCD

on:
  push:
    branches:
      - main  # Change this to your default branch

jobs:
  deploy:
    runs-on: self-hosted  # Ensures it uses your self-hosted runner (bastion)

    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Using Node.js version 16

    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: SSH into kube-proxy-dev instance and deploy to ArgoCD
      env:
        ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
      run: |
        # SSH into the kube-proxy-dev instance
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} user@kube-proxy-dev << 'EOF'
          # Once connected, log in to ArgoCD
          argocd login argocd.dev.revlitix.com --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure

          # Deploy the applications
          for app in alert-api audit-service audit-trail-service insight-api; do
            app_name="${app}-test"
            argocd app create "$app_name" \
              --repo https://github.com/mcreddy5/argocdapplications-githubactions.git \
              --path "$app" \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace argocd \
              --sync-policy manual \
              --revision HEAD \
              --project development
          done
        EOF
