name: Deploy to ArgoCD via Remote EC2

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  deploy-argocd:
    runs-on: self-hosted  # The GitHub self-hosted runner

    steps:
      - name: Deploy Applications via Target EC2
        run: |
          # Define applications in a file or inline
          apps="alert-api audit-service audit-trail-service insight-api " # Add all 40 app names

          # SSH into the target EC2 machine
          ssh kube-proxy-dev << 'EOF'
          echo "Connected to target machine: $(hostname)"
          
          # Login to ArgoCD using secrets directly from GitHub
          argocd login argocd.dev.revlitix.com \
            --username "${{ secrets.ARGOCD_USERNAME }}" \
            --password "${{ secrets.ARGOCD_PASSWORD }}" \
            --insecure \
            --grpc-web

          # Function to create/sync an application
          create_or_sync_app() {
            local app_name=\$1
            echo "Processing application: \$app_name"
            
            if argocd app get "\$app_name" > /dev/null 2>&1; then
              echo "Application \$app_name already exists"
            else
              echo "Creating application: \$app_name"
              argocd app create "\$app_name" \
                --repo https://github.com/mcreddy5/argocdapplications-githubactions.git \
                --path "\$app_name" \
                --dest-server https://CDD2784112303F2DA634E39463523C0D.gr7.us-east-2.eks.amazonaws.com \
                --dest-namespace development \
                --revision HEAD \
                --project development || echo "Failed to create \$app_name"
            fi
          }

          # Process applications
          echo "$apps" | tr ' ' '\n' | while read -r app; do
            create_or_sync_app "\$app-test"
          done

          echo "All applications processed."
          EOF
